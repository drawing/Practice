/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.6
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */
#include "drawing_proxy.h"
#include "drawing_wrap.h"


@implementation Shape
-(void*)getCptr {
	return swigCPtr;
}

-(id)initWithCptr: (void*)cptr swigOwnCObject: (BOOL)ownCObject {
	if((self = [super init])) {
		swigCPtr = cptr;
        swigCMemOwn = ownCObject;
	}
	return self;
}

-(void)draw
{
 _wrap_Shape_draw([self getCptr]);
}


-(void)dealloc{

  if (swigCPtr != NULL) {
    if (swigCMemOwn) {
        _wrap_delete_Shape((void*)swigCPtr);
        swigCMemOwn = NO;
    }
    swigCPtr = NULL;
  }
  [super dealloc];

}

@end


@implementation Painter
-(void*)getCptr {
	return swigCPtr;
}

-(id)initWithCptr: (void*)cptr swigOwnCObject: (BOOL)ownCObject {
	if((self = [super init])) {
		swigCPtr = cptr;
        swigCMemOwn = ownCObject;
	}
	return self;
}

-(void)drawShape: (Shape*)shape
{
 _wrap_Painter_drawShape([self getCptr], [shape getCptr]);
}

-(id)init
{
 
	if((self = [super init])) {
		void* cptr = _wrap_new_Painter();
        swigCPtr = cptr;
        swigCMemOwn = YES;
	}
	return self;

}


-(void)dealloc{

  if (swigCPtr != NULL) {
    if (swigCMemOwn) {
        _wrap_delete_Painter((void*)swigCPtr);
        swigCMemOwn = NO;
    }
    swigCPtr = NULL;
  }
  [super dealloc];

}

@end

